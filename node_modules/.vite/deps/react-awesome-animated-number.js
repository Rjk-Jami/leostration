import {
  require_jsx_runtime
} from "./chunk-SSJGAJRW.js";
import {
  __toESM,
  require_react
} from "./chunk-S2TLTWWO.js";

// node_modules/@babel/runtime/helpers/esm/typeof.js
function _typeof(o) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof(o);
}

// node_modules/@babel/runtime/helpers/esm/toPrimitive.js
function toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t)
    return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof(i))
      return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}

// node_modules/@babel/runtime/helpers/esm/toPropertyKey.js
function toPropertyKey(t) {
  var i = toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : String(i);
}

// node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(obj, key, value) {
  key = toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

// node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}

// node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}

// node_modules/react-awesome-animated-number/dist/index.esm.js
var import_react = __toESM(require_react());

// node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}

// node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}

// node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}

// node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}

// node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

// node_modules/@babel/runtime/helpers/esm/slicedToArray.js
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

// node_modules/react-awesome-animated-number/dist/index.esm.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
function ownKeys$1(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread$1(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys$1(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
var AnimatedNumberItem = function AnimatedNumberItem2(_ref) {
  var number = _ref.number, size = _ref.size, _ref$duration = _ref.duration, duration = _ref$duration === void 0 ? 200 : _ref$duration, _ref$order = _ref.order, order = _ref$order === void 0 ? "asc" : _ref$order;
  var _useState = (0, import_react.useState)(0), _useState2 = _slicedToArray(_useState, 2), currentIndex = _useState2[0], setCurrentIndex = _useState2[1];
  var _useState3 = (0, import_react.useState)({}), _useState4 = _slicedToArray(_useState3, 2), transformStyle = _useState4[0], setTransformStyle = _useState4[1];
  var numberWrapperRef = (0, import_react.useRef)(null);
  (0, import_react.useEffect)(function() {
    setCurrentIndex(number);
  }, [number]);
  (0, import_react.useEffect)(function() {
    var $numberWrapper = numberWrapperRef.current;
    if ($numberWrapper) {
      requestAnimationFrame(function() {
        setTransformStyle({
          transform: "translateY(".concat(size * (order === "desc" ? 9 - currentIndex : currentIndex) * -1, "px)")
        });
      });
    }
  }, [currentIndex, size, order]);
  return (0, import_jsx_runtime.jsx)("div", {
    className: "AnimatedNumberItem",
    style: {
      height: size
    },
    children: (0, import_jsx_runtime.jsx)("div", {
      ref: numberWrapperRef,
      className: "AnimatedNumberItem__wrapper",
      style: _objectSpread$1({
        transitionDuration: "".concat(duration, "ms")
      }, transformStyle),
      children: Array.from({
        length: 10
      }).map(function(_, number2) {
        return (0, import_jsx_runtime.jsx)("div", {
          className: "AnimatedNumberItem__number",
          style: {
            fontSize: size,
            height: size
          },
          children: order === "desc" ? 9 - number2 : number2
        }, number2);
      })
    })
  });
};
var AnimatedNumberItem$1 = AnimatedNumberItem;
var _excluded = ["value", "size", "hasComma", "duration", "style", "className", "order", "minDigits"];
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
var AnimatedNumber = function AnimatedNumber2(_ref) {
  var value = _ref.value, _ref$size = _ref.size, size = _ref$size === void 0 ? 14 : _ref$size, _ref$hasComma = _ref.hasComma, hasComma = _ref$hasComma === void 0 ? false : _ref$hasComma, _ref$duration = _ref.duration, duration = _ref$duration === void 0 ? 200 : _ref$duration, style = _ref.style, className = _ref.className, _ref$order = _ref.order, order = _ref$order === void 0 ? "asc" : _ref$order, minDigits = _ref.minDigits, restProps = _objectWithoutProperties(_ref, _excluded);
  var numberArray = (0, import_react.useMemo)(function() {
    var reversedNumberArray = String(value).split("").reverse();
    if (typeof minDigits === "number" && reversedNumberArray.length < minDigits) {
      var lackOfDigits = minDigits - reversedNumberArray.length;
      Array.from({
        length: lackOfDigits
      }).forEach(function() {
        reversedNumberArray.push("0");
      });
    }
    return reversedNumberArray;
  }, [value, minDigits]);
  var isMinus = (0, import_react.useMemo)(function() {
    return numberArray[numberArray.length - 1] === "-";
  }, [numberArray]);
  var decimalPointIndex = (0, import_react.useMemo)(function() {
    return numberArray.findIndex(function(value2) {
      return value2 === ".";
    });
  }, [numberArray]);
  var decimalLength = (0, import_react.useMemo)(function() {
    return decimalPointIndex > -1 ? decimalPointIndex : 0;
  }, [numberArray, decimalPointIndex]);
  return (0, import_jsx_runtime.jsx)("div", _objectSpread(_objectSpread({
    className: className ? "ReactAwesomeAnimatedNumber ".concat(className) : "ReactAwesomeAnimatedNumber",
    style: _objectSpread(_objectSpread({}, style), {}, {
      height: size
    })
  }, restProps), {}, {
    children: numberArray.map(function(number, index) {
      var isInt = decimalLength ? index > decimalPointIndex : true;
      var intIndex = decimalLength ? index - decimalLength - 1 : index;
      var isCommaNeeded = hasComma && isInt && intIndex % 3 === 0 && intIndex !== 0 && (isMinus ? index !== numberArray.length - 1 : true);
      return (0, import_jsx_runtime.jsxs)(import_react.Fragment, {
        children: [isCommaNeeded && (0, import_jsx_runtime.jsx)("div", {
          className: "ReactAwesomeAnimatedNumber__text",
          style: {
            fontSize: size,
            height: size
          },
          children: ","
        }), isNaN(Number(number)) ? (0, import_jsx_runtime.jsx)("div", {
          className: "ReactAwesomeAnimatedNumber__text",
          style: {
            fontSize: size,
            height: size
          },
          children: number
        }) : (0, import_jsx_runtime.jsx)(AnimatedNumberItem$1, {
          number: Number(number),
          size,
          duration,
          order
        })]
      }, index);
    })
  }));
};
var AnimatedNumber$1 = AnimatedNumber;
export {
  AnimatedNumber$1 as default
};
//# sourceMappingURL=react-awesome-animated-number.js.map
